name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          # Asegurarse de que estamos en el directorio correcto
          cd /var/www

          # Crear directorio para la base de datos si no existe
          mkdir -p /var/www/notion2_data

          # Eliminar el directorio anterior si existe
          rm -rf notion2
          
          # Crear nuevo directorio
          mkdir notion2
          cd notion2

          # Clonar repositorio
          git clone https://github.com/k4ditano/documentaryt.git .

          # Verificar que estamos en el directorio correcto
          pwd
          ls -la

          # Instalar dependencias del frontend y construir
          echo "Instalando dependencias del frontend..."
          npm install --legacy-peer-deps
          
          # Modificar el script de construcción para ignorar errores de TypeScript
          sed -i 's/"build": "tsc && vite build"/"build": "vite build"/' package.json
          
          echo "Construyendo frontend..."
          npm run build

          # Verificar la construcción del frontend
          echo "Verificando archivos del frontend..."
          ls -la
          if [ -d "dist" ]; then
            echo "Contenido del directorio dist:"
            ls -la dist/
            echo "Contenido de index.html:"
            cat dist/index.html
          else
            echo "Error: El directorio dist no existe"
            exit 1
          fi

          # Instalar dependencias del backend
          echo "Instalando dependencias del backend..."
          cd backend
          rm -f package-lock.json
          npm cache clean --force
          npm install --legacy-peer-deps

          # Crear archivo .env en el directorio backend
          echo "Configurando variables de entorno..."
          echo "PORT=3001" > .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRE=24h" >> .env
          echo "NODE_ENV=production" >> .env
          echo "DB_PATH=/var/www/notion2_data/database.sqlite" >> .env

          # Verificar estado de Apache
          echo "Verificando estado de Apache..."
          sudo systemctl status apache2 || true
          
          # Asegurar que Apache está detenido
          sudo systemctl stop apache2

          # Configurar Apache
          echo "Configurando Apache..."
          sudo tee /etc/apache2/sites-available/notion2.conf > /dev/null << 'EOL'
          <VirtualHost *:80>
              ServerName 145.223.100.119
              DocumentRoot /var/www/notion2/dist

              ProxyPreserveHost On
              ProxyRequests Off

              <Location /api>
                  ProxyPass http://localhost:3001/api
                  ProxyPassReverse http://localhost:3001/api
              </Location>

              <Directory /var/www/notion2/dist>
                  Options Indexes FollowSymLinks MultiViews
                  AllowOverride All
                  Require all granted
                  DirectoryIndex index.html
              </Directory>

              ErrorLog \${APACHE_LOG_DIR}/notion2-error.log
              CustomLog \${APACHE_LOG_DIR}/notion2-access.log combined
          </VirtualHost>
          EOL

          # Habilitar módulos de Apache necesarios
          sudo a2enmod proxy
          sudo a2enmod proxy_http
          sudo a2enmod rewrite

          # Deshabilitar el sitio por defecto y habilitar el nuevo
          sudo a2dissite 000-default.conf
          sudo a2ensite notion2.conf

          # Verificar configuración de Apache
          echo "Verificando configuración de Apache..."
          sudo apache2ctl configtest

          # Reiniciar Apache
          echo "Reiniciando Apache..."
          sudo systemctl restart apache2
          sudo systemctl status apache2

          # Asegurar permisos
          cd ..
          chmod -R 755 /var/www/notion2
          chmod -R 755 /var/www/notion2_data
          chmod 644 backend/.env

          # Crear archivo .htaccess en el directorio dist
          echo "Creando .htaccess..."
          cat > dist/.htaccess << 'EOL'
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteBase /
            RewriteRule ^index\.html$ - [L]
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule . /index.html [L]
          </IfModule>
          EOL

          # Reiniciar aplicación con PM2
          echo "Reiniciando aplicación..."
          pm2 delete notion2 || true
          cd backend
          NODE_ENV=production pm2 start src/server.js --name notion2

          # Mostrar estado de PM2
          echo "Estado de PM2:"
          pm2 list
          
          # Mostrar logs iniciales
          echo "Logs de la aplicación:"
          pm2 logs notion2 --lines 20 || true

          # Verificar que los servicios están corriendo
          echo "Verificando servicios..."
          sudo systemctl status apache2
          curl -v http://localhost:3001/api/health || true
          curl -v http://localhost || true 