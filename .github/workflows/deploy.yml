name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          # Asegurarse de que estamos en el directorio correcto
          cd /var/www

          # Crear directorio para la base de datos si no existe
          mkdir -p /var/www/notion2_data

          # Detener la aplicación actual
          pm2 delete notion2 || true
          
          # Detener Apache
          sudo systemctl stop apache2

          # Eliminar el directorio anterior si existe
          rm -rf notion2
          
          # Crear nuevo directorio
          mkdir notion2
          cd notion2

          # Clonar repositorio
          git clone https://github.com/k4ditano/documentaryt.git .

          # Verificar que estamos en el directorio correcto
          pwd
          ls -la

          # Instalar dependencias del frontend y construir
          echo "Instalando dependencias del frontend..."
          npm install --legacy-peer-deps
          
          # Configurar variables de entorno del frontend
          echo "Configurando variables de entorno del frontend..."
          echo "VITE_API_URL=http://145.223.100.119:3001/api" > .env
          echo "VITE_GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env
          
          # Construir el frontend
          echo "Construyendo frontend..."
          npm run build

          # Instalar dependencias del backend
          echo "Instalando dependencias del backend..."
          cd backend
          npm install --legacy-peer-deps

          # Configurar variables de entorno del backend
          echo "Configurando variables de entorno..."
          echo "PORT=3001" > .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRE=24h" >> .env
          echo "COOKIE_EXPIRE=24" >> .env
          echo "NODE_ENV=production" >> .env
          echo "DB_PATH=/var/www/notion2_data/database.sqlite" >> .env
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env

          # Asegurar permisos
          cd ..
          sudo chown -R www-data:www-data /var/www/notion2
          sudo chown -R www-data:www-data /var/www/notion2_data
          sudo chmod -R 755 /var/www/notion2
          sudo chmod -R 755 /var/www/notion2_data
          sudo chmod 644 backend/.env

          # Iniciar la aplicación con PM2
          cd backend
          NODE_ENV=production pm2 start src/server.js --name notion2

          # Esperar a que la aplicación esté en línea
          echo "Esperando a que la aplicación esté en línea..."
          sleep 10

          # Verificar el estado de PM2
          pm2 list
          pm2 logs notion2 --lines 20

          # Reiniciar Apache
          sudo systemctl restart apache2
          
          # Verificar el estado de Apache
          sudo systemctl status apache2

          # Verificar que la aplicación responde
          curl -v http://localhost:3001/api/health || true 